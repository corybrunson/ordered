% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/param-engine-ordinalForest.R
\docType{data}
\name{ordinalForest_parameters}
\alias{ordinalForest_parameters}
\alias{naive_scores}
\alias{num_scores}
\alias{num_score_perms}
\alias{num_score_trees}
\alias{num_scores_best}
\alias{ord_metric}
\alias{values_ord_metric}
\title{Dials for ordinalForest engine parameters}
\format{
An object of class \code{character} of length 4.
}
\usage{
naive_scores(values = c(FALSE, TRUE))

num_scores(range = c(100L, 2000L), trans = NULL)

num_score_perms(range = c(100L, 500L), trans = NULL)

num_score_trees(range = c(10L, 200L), trans = NULL)

num_scores_best(range = c(2L, 20L), trans = NULL)

ord_metric(values = values_ord_metric)

values_ord_metric
}
\arguments{
\item{values}{A character string of possible values. See \code{values_ord_metric}.}

\item{range}{A two-element vector holding the \emph{defaults} for the smallest and
largest possible values, respectively. If a transformation is specified,
these values should be in the \emph{transformed units}.}

\item{trans}{A \code{trans} object from the \code{scales} package, such as
\code{scales::transform_log10()} or \code{scales::transform_reciprocal()}. If not
provided, the default is used which matches the units used in \code{range}. If
no transformation, \code{NULL}.}
}
\description{
These parameters are auxiliary to random forest models that use the
"ordinalForest" engine. They correspond to tuning parameters that would be
specified using \code{set_engine("ordinalForest", ...)}.
}
\details{
These functions generate parameters for \code{\link[parsnip:rand_forest]{parsnip::rand_forest()}}
models using the \code{"ordinalForest"} engine. See \code{?ordinalForest::ordfor()}
for more details on the original parameters. These parameters are
engine-specific, not general to decision tree models, so are provided here
rather than in \code{dials}.
\itemize{
\item \code{naive_scores()}: Whether to construct only a "naive" ordinal forest using
the scores \eqn{1,2,3,\ldots} for the ordinal values; tunes \code{naive}.
\item \code{num_scores()}: The number of score sets tried prior to optimization; tunes
\code{nsets}.
\item \code{num_score_perms()}: The number of permutations of the class width ordering
to try for each score set tried (after the first); tunes \code{npermtrial}.
\item \code{num_score_trees()}: The number of trees in the score set--specific
forests; tunes \code{ntreeperdiv}.
\item \code{num_scores_best()}: The number of top-performing score sets used to
calculate the optimized score set; tunes \code{nbest}.
\item \code{ord_metric()}: The performance function used to evaluate score
set--specific forests; tunes \code{perffunction}. See also
\code{?ordinalForest::perff}.
}
}
\examples{
naive_scores()
num_scores()
num_score_perms()
num_score_trees()
num_scores_best()
ord_metric()
}
\seealso{
\code{\link[dials:trees]{dials::trees()}}
}
\keyword{datasets}
